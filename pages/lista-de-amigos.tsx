// This is a skeleton starter React page generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import * as ph from "@plasmicapp/host";

import { ScreenVariantProvider } from "../components/plasmic/protect_2_self/PlasmicGlobalVariant__Screen";
import { PlasmicListaDeAmigos } from "../components/plasmic/protect_2_self/PlasmicListaDeAmigos";
import { useRouter } from "next/router";
import axios from "axios";
import { useEffect, useState } from "react";
import MiniaturaAmigo from "../components/MiniaturaAmigo";

function ListaDeAmigos() {
  // Use PlasmicListaDeAmigos to render this component as it was
  // designed in Plasmic, by activating the appropriate variants,
  // attaching the appropriate event handlers, etc.  You
  // can also install whatever React hooks you need here to manage state or
  // fetch data.
  //
  // Props you can pass into PlasmicListaDeAmigos are:
  // 1. Variants you want to activate,
  // 2. Contents for slots you want to fill,
  // 3. Overrides for any named node in the component to attach behavior and data,
  // 4. Props to set on the root node.
  //
  // By default, PlasmicListaDeAmigos is wrapped by your project's global
  // variant context providers. These wrappers may be moved to
  // Next.js Custom App component
  // (https://nextjs.org/docs/advanced-features/custom-app).

  const [amigos, setAmigos] = useState<any[]>();
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<Error>();

  const router = useRouter()

  useEffect(() => {
    const getData = async () => {
      try {
        const response = await axios.get(
          "http://localhost:8080/usuario/friends/" + localStorage.getItem('userId')
        );
        setAmigos(response.data);
        setError(undefined);  
        console.log(amigos);
      } catch (err) {
        setError((err as any).message);
        setAmigos([]);
      } finally {
        setLoading(false);
      }
    };
    getData();
  }, []);
  if (error) {
		return <div>Error: {error.message}</div>
	}
  
  function removeAmigo(friendId: any){
    axios.delete("http://localhost:8080/usuario/removeFriend/" + localStorage.getItem('userId') + "/" + friendId)
    window.location.reload();
  }

  return (
    <ph.PageParamsProvider
      params={useRouter()?.query}
      query={useRouter()?.query}
    >
      <PlasmicListaDeAmigos
        botoesPerfil={{
          pagina: "amigos"
        }}
        container = {(loading || !amigos) ? {} :   { 
          children: amigos.map(entry => <MiniaturaAmigo
            nomeUsuario={{
              render: (props, Comp) => <Comp {...props}>{entry.username}</Comp>,
            }}
            naLista={"sim"}
            remove={{
              props: {
                onClick: () => removeAmigo(entry.id)
              }
            }}
          />) 
        }} />
    </ph.PageParamsProvider>
  );
}

export default ListaDeAmigos;
