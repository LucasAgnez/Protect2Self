// This is a skeleton starter React page generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import * as ph from "@plasmicapp/host";
import axios from "axios";

import { ScreenVariantProvider } from "../components/plasmic/protect_2_self/PlasmicGlobalVariant__Screen";
import { PlasmicCriacaoGrupoImportar } from "../components/plasmic/protect_2_self/PlasmicCriacaoGrupoImportar";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import Select__Option from "../components/Select__Option";

function CriacaoGrupoImportar() {
  // Use PlasmicCriacaoGrupoImportar to render this component as it was
  // designed in Plasmic, by activating the appropriate variants,
  // attaching the appropriate event handlers, etc.  You
  // can also install whatever React hooks you need here to manage state or
  // fetch data.
  //
  // Props you can pass into PlasmicCriacaoGrupoImportar are:
  // 1. Variants you want to activate,
  // 2. Contents for slots you want to fill,
  // 3. Overrides for any named node in the component to attach behavior and data,
  // 4. Props to set on the root node.
  //
  // By default, PlasmicCriacaoGrupoImportar is wrapped by your project's global
  // variant context providers. These wrappers may be moved to
  // Next.js Custom App component
  // (https://nextjs.org/docs/advanced-features/custom-app).
  
  const router = useRouter()

  const [dados, setDados] = useState<any[]>();
  const [metaSelecionada, setMetaSelecionada] = useState<number>()
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<Error>();
  const [preenchido, setPreenchido] = useState<boolean>()


  useEffect(() => {
    const getData = async () => {
      try {
        const response = await axios.get(
          "http://localhost:8080/usuario/getMetas/" + localStorage.getItem('userId')
        );
        setDados(response.data);
        setError(undefined);
        console.log(dados);
      } catch (err) {
        setError((err as any).message);
        setDados([]);
      } finally {
        setLoading(false);
      }
    };
    getData();
  }, []);
  
  const estatdcmplt = (metaSelecionada !== undefined) && preenchido

  function checaPreenchido(){
    if((document.getElementById("nome") as any).value && (document.getElementById("descricao") as any).value){
      setPreenchido(true);
    }
  }

  function criaGrupo() {
    axios.post
    ("http://localhost:8080/grupo/save/meta/" + localStorage.getItem('userId') + "/" +  metaSelecionada, {
      nome: (document.getElementById("nome") as any).value,
      descricao: (document.getElementById("descricao")as any).value,
  })
    .then((response) => {
      console.log(JSON.stringify(response));
      router.push('/logged');
    });
  }
  
  return (
    <ph.PageParamsProvider
      params={useRouter()?.query}
      query={useRouter()?.query}
    >
      <PlasmicCriacaoGrupoImportar
      nomeGrupo={{
        props: { onChange: () => checaPreenchido()}
      }}
      descricao={{
        props: { onChange: () => checaPreenchido()}
      }}
      confirma={{
        props: { 
          isDisabled : !estatdcmplt,
          onClick: () => criaGrupo()}
      }} 
      meta={(loading || !dados) ? {} :{ 
        children: dados.map(entry => <Select__Option children={String(entry.nome)} value={String(entry.id)} color={"dark"}/>), onChange: (e) => e && setMetaSelecionada(+e)
      }} />
    </ph.PageParamsProvider>
  );
}

export default CriacaoGrupoImportar;