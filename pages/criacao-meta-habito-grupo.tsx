// This is a skeleton starter React page generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import * as ph from "@plasmicapp/host";
import axios from "axios";

import { ScreenVariantProvider } from "../components/plasmic/protect_2_self/PlasmicGlobalVariant__Screen";
import { PlasmicCriacaoMetaHabitoGrupo } from "../components/plasmic/protect_2_self/PlasmicCriacaoMetaHabitoGrupo";
import { useRouter } from "next/router";

function CriacaoMetaHabitoGrupo() {
  // Use PlasmicCriacaoMetaHabitoGrupo to render this component as it was
  // designed in Plasmic, by activating the appropriate variants,
  // attaching the appropriate event handlers, etc.  You
  // can also install whatever React hooks you need here to manage state or
  // fetch data.
  //
  // Props you can pass into PlasmicCriacaoMetaHabitoGrupo are:
  // 1. Variants you want to activate,
  // 2. Contents for slots you want to fill,
  // 3. Overrides for any named node in the component to attach behavior and data,
  // 4. Props to set on the root node.
  //
  // By default, PlasmicCriacaoMetaHabitoGrupo is wrapped by your project's global
  // variant context providers. These wrappers may be moved to
  // Next.js Custom App component
  // (https://nextjs.org/docs/advanced-features/custom-app).
  const router = useRouter()

  function criaGrupoHabito() {
    axios.post
    ("http://localhost:8080/meta/save/",{
        nome: (document.getElementById("nomeMeta") as any).value,
        descricao: (document.getElementById("descricaoMeta")as any).value,
      /*
      */
    })
    .then((response) => {
      axios.post
      ("http://localhost:8080/grupo/save/meta/" + localStorage.getItem('userId') + "/" + response.data.id, {
          nome: (document.getElementById("nomeGrupo") as any).value,
          descricao: (document.getElementById("descricaoGrupo")as any).value,
      })
      console.log(JSON.stringify(response));
      router.push('/logged');
    });
  }

  return (
    <ph.PageParamsProvider
      params={useRouter()?.query}
      query={useRouter()?.query}
    >
      <PlasmicCriacaoMetaHabitoGrupo 
              confirma={{
                props: { onClick: () => (criaGrupoHabito())}
              }}
      />
    </ph.PageParamsProvider>
  );
}

export default CriacaoMetaHabitoGrupo;
